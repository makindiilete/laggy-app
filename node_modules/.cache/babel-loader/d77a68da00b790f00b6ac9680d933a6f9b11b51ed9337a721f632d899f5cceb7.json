{"ast":null,"code":"var _jsxFileName = \"/Users/michael.akindilete/Desktop/Dev/Frontend reviews/laggy app/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport SearchBar from \"./components/SearchBar\";\nimport ResultsList from \"./components/ResultsList\";\nimport { generateLargeDataset } from \"./utils/generateData\";\nimport \"./App.css\";\n\n/**\n * Main application component - UNOPTIMIZED VERSION\n *\n * This version demonstrates common performance issues in React applications:\n * 1. Expensive filtering operations on every render\n * 2. No memoization of components or calculations\n * 3. Multiple useState hooks that could be consolidated\n * 4. No prevention of unnecessary re-renders\n *\n * @returns {JSX.Element} Complete application UI\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // Using multiple useState hooks instead of useReducer for related state\n  const [users, setUsers] = useState([]);\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(true);\n  const [renderCount, setRenderCount] = useState(0);\n\n  // Load data\n  useEffect(() => {\n    setIsLoading(true);\n    // Simulate loading delay\n    setTimeout(() => {\n      const data = generateLargeDataset();\n      setUsers(data);\n      setIsLoading(false);\n    }, 500);\n  }, []);\n\n  // Increment render count on each render (for demonstration)\n  // This will help us visualize how many times the component re-renders\n  useEffect(() => {\n    setRenderCount(prevCount => prevCount + 1);\n  });\n\n  /**\n   * PERFORMANCE ISSUE #1: Expensive filtering calculation on every render\n   * This filtering operation runs on EVERY render, even when searchQuery hasn't changed\n   * With 10,000 items, this creates noticeable lag in the UI\n   */\n  const filteredResults = users.filter(user => {\n    if (!searchQuery.trim()) return true;\n    const query = searchQuery.toLowerCase();\n    return user.name.toLowerCase().includes(query) || user.email.toLowerCase().includes(query) || user.department.toLowerCase().includes(query);\n  });\n\n  // Time the filtering operation to demonstrate performance impact\n  console.time(\"Filter operation\");\n  const results = filteredResults;\n  console.timeEnd(\"Filter operation\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"User Search - Laggy Version\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"metrics\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"Render count: \", renderCount]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"Results: \", results.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SearchBar, {\n      query: searchQuery,\n      onQueryChange: setSearchQuery\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: \"Loading users...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }, this) :\n    /*#__PURE__*/\n    // PERFORMANCE ISSUE #3: No memoization causes all items to re-render\n    _jsxDEV(ResultsList, {\n      results: results\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"VuPYndKj6S4SafLCIP9r++sFMTQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","SearchBar","ResultsList","generateLargeDataset","jsxDEV","_jsxDEV","App","_s","users","setUsers","searchQuery","setSearchQuery","isLoading","setIsLoading","renderCount","setRenderCount","setTimeout","data","prevCount","filteredResults","filter","user","trim","query","toLowerCase","name","includes","email","department","console","time","results","timeEnd","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","onQueryChange","_c","$RefreshReg$"],"sources":["/Users/michael.akindilete/Desktop/Dev/Frontend reviews/laggy app/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport SearchBar from \"./components/SearchBar\";\nimport ResultsList from \"./components/ResultsList\";\nimport { generateLargeDataset } from \"./utils/generateData\";\nimport \"./App.css\";\n\n/**\n * Main application component - UNOPTIMIZED VERSION\n *\n * This version demonstrates common performance issues in React applications:\n * 1. Expensive filtering operations on every render\n * 2. No memoization of components or calculations\n * 3. Multiple useState hooks that could be consolidated\n * 4. No prevention of unnecessary re-renders\n *\n * @returns {JSX.Element} Complete application UI\n */\nfunction App() {\n  // Using multiple useState hooks instead of useReducer for related state\n  const [users, setUsers] = useState([]);\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(true);\n  const [renderCount, setRenderCount] = useState(0);\n\n  // Load data\n  useEffect(() => {\n    setIsLoading(true);\n    // Simulate loading delay\n    setTimeout(() => {\n      const data = generateLargeDataset();\n      setUsers(data);\n      setIsLoading(false);\n    }, 500);\n  }, []);\n\n  // Increment render count on each render (for demonstration)\n  // This will help us visualize how many times the component re-renders\n  useEffect(() => {\n    setRenderCount((prevCount) => prevCount + 1);\n  });\n\n  /**\n   * PERFORMANCE ISSUE #1: Expensive filtering calculation on every render\n   * This filtering operation runs on EVERY render, even when searchQuery hasn't changed\n   * With 10,000 items, this creates noticeable lag in the UI\n   */\n  const filteredResults = users.filter((user) => {\n    if (!searchQuery.trim()) return true;\n\n    const query = searchQuery.toLowerCase();\n    return (\n      user.name.toLowerCase().includes(query) ||\n      user.email.toLowerCase().includes(query) ||\n      user.department.toLowerCase().includes(query)\n    );\n  });\n\n  // Time the filtering operation to demonstrate performance impact\n  console.time(\"Filter operation\");\n  const results = filteredResults;\n  console.timeEnd(\"Filter operation\");\n\n  return (\n    <div className=\"app\">\n      <header>\n        <h1>User Search - Laggy Version</h1>\n        <div className=\"metrics\">\n          <span>Render count: {renderCount}</span>\n          <span>Results: {results.length}</span>\n        </div>\n      </header>\n\n      {/* PERFORMANCE ISSUE #2: New function created on every render */}\n      <SearchBar query={searchQuery} onQueryChange={setSearchQuery} />\n\n      {isLoading ? (\n        <div className=\"loading\">Loading users...</div>\n      ) : (\n        // PERFORMANCE ISSUE #3: No memoization causes all items to re-render\n        <ResultsList results={results} />\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,SAAS,MAAM,wBAAwB;AAC9C,OAAOC,WAAW,MAAM,0BAA0B;AAClD,SAASC,oBAAoB,QAAQ,sBAAsB;AAC3D,OAAO,WAAW;;AAElB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA,SAAAC,MAAA,IAAAC,OAAA;AAWA,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb;EACA,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACW,WAAW,EAAEC,cAAc,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACa,SAAS,EAAEC,YAAY,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACe,WAAW,EAAEC,cAAc,CAAC,GAAGhB,QAAQ,CAAC,CAAC,CAAC;;EAEjD;EACAC,SAAS,CAAC,MAAM;IACda,YAAY,CAAC,IAAI,CAAC;IAClB;IACAG,UAAU,CAAC,MAAM;MACf,MAAMC,IAAI,GAAGd,oBAAoB,CAAC,CAAC;MACnCM,QAAQ,CAACQ,IAAI,CAAC;MACdJ,YAAY,CAAC,KAAK,CAAC;IACrB,CAAC,EAAE,GAAG,CAAC;EACT,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA;EACAb,SAAS,CAAC,MAAM;IACde,cAAc,CAAEG,SAAS,IAAKA,SAAS,GAAG,CAAC,CAAC;EAC9C,CAAC,CAAC;;EAEF;AACF;AACA;AACA;AACA;EACE,MAAMC,eAAe,GAAGX,KAAK,CAACY,MAAM,CAAEC,IAAI,IAAK;IAC7C,IAAI,CAACX,WAAW,CAACY,IAAI,CAAC,CAAC,EAAE,OAAO,IAAI;IAEpC,MAAMC,KAAK,GAAGb,WAAW,CAACc,WAAW,CAAC,CAAC;IACvC,OACEH,IAAI,CAACI,IAAI,CAACD,WAAW,CAAC,CAAC,CAACE,QAAQ,CAACH,KAAK,CAAC,IACvCF,IAAI,CAACM,KAAK,CAACH,WAAW,CAAC,CAAC,CAACE,QAAQ,CAACH,KAAK,CAAC,IACxCF,IAAI,CAACO,UAAU,CAACJ,WAAW,CAAC,CAAC,CAACE,QAAQ,CAACH,KAAK,CAAC;EAEjD,CAAC,CAAC;;EAEF;EACAM,OAAO,CAACC,IAAI,CAAC,kBAAkB,CAAC;EAChC,MAAMC,OAAO,GAAGZ,eAAe;EAC/BU,OAAO,CAACG,OAAO,CAAC,kBAAkB,CAAC;EAEnC,oBACE3B,OAAA;IAAK4B,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClB7B,OAAA;MAAA6B,QAAA,gBACE7B,OAAA;QAAA6B,QAAA,EAAI;MAA2B;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACpCjC,OAAA;QAAK4B,SAAS,EAAC,SAAS;QAAAC,QAAA,gBACtB7B,OAAA;UAAA6B,QAAA,GAAM,gBAAc,EAACpB,WAAW;QAAA;UAAAqB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACxCjC,OAAA;UAAA6B,QAAA,GAAM,WAAS,EAACH,OAAO,CAACQ,MAAM;QAAA;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC,eAGTjC,OAAA,CAACJ,SAAS;MAACsB,KAAK,EAAEb,WAAY;MAAC8B,aAAa,EAAE7B;IAAe;MAAAwB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EAE/D1B,SAAS,gBACRP,OAAA;MAAK4B,SAAS,EAAC,SAAS;MAAAC,QAAA,EAAC;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;IAAA;IAE/C;IACAjC,OAAA,CAACH,WAAW;MAAC6B,OAAO,EAAEA;IAAQ;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CACjC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAAC/B,EAAA,CAlEQD,GAAG;AAAAmC,EAAA,GAAHnC,GAAG;AAoEZ,eAAeA,GAAG;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}